
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kagan
 */
public class SirketPaneli extends javax.swing.JFrame {
DefaultListModel model=new DefaultListModel();
DefaultListModel model2=new DefaultListModel();
 public Company company=Company.GlobalArrayList.getGlobalList().get(LoginKismi.control);
 
 Transport transport=new Transport();
    /**
     * Creates new form SirketPaneli
     */
    public SirketPaneli() {
        initComponents();
        Seferlist.setModel(model);
       
        for (Bus bus : company.companyBus) {
    model.addElement(bus.chosenTrip.city);
}
        for (Plane plane : company.companyPlane) {
    model.addElement(plane.chosenTrip.city);
}
        for (Train train : company.companyTrain) {
    model.addElement(train.chosenTrip.city);
}
        
        for (Bus bus : company.companyBus) {
    model2.addElement(bus.vehicleName);
}
        for (Plane plane : company.companyPlane) {
    model2.addElement(plane.vehicleName);
}
        for (Train train : company.companyTrain) {
    model2.addElement(train.vehicleName);
}
        
        Araclist.setModel(model2);
       
        
   }
    
  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton7 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gunlukkarmesaji = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        sefereklebutonu = new javax.swing.JButton();
        sefersilbutonu = new javax.swing.JButton();
        sefer1buton = new javax.swing.JRadioButton();
        sefer2buton = new javax.swing.JRadioButton();
        sefer3buton = new javax.swing.JRadioButton();
        sefer4buton = new javax.swing.JRadioButton();
        sefer5buton = new javax.swing.JRadioButton();
        sefer6buton = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Seferlist = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        otobusbutonu = new javax.swing.JRadioButton();
        trenbutonu = new javax.swing.JRadioButton();
        ucakbutonu = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Araclist = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();

        jRadioButton7.setText("jRadioButton7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rezervia");
        setLocation(new java.awt.Point(300, 120));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Şirket Paneli");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Günlük Kar:");

        gunlukkarmesaji.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton1.setText("Günlük Kar Hesapla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Geri Git");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        sefereklebutonu.setText("Sefer Ekle");
        sefereklebutonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sefereklebutonuActionPerformed(evt);
            }
        });

        sefersilbutonu.setText("Sefer Sil");
        sefersilbutonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sefersilbutonuActionPerformed(evt);
            }
        });

        buttonGroup1.add(sefer1buton);
        sefer1buton.setText("1.Sefer");
        sefer1buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sefer1butonActionPerformed(evt);
            }
        });

        buttonGroup1.add(sefer2buton);
        sefer2buton.setText("2.Sefer");

        buttonGroup1.add(sefer3buton);
        sefer3buton.setText("3.Sefer");

        buttonGroup1.add(sefer4buton);
        sefer4buton.setText("4.Sefer");

        buttonGroup1.add(sefer5buton);
        sefer5buton.setText("5.Sefer");

        buttonGroup1.add(sefer6buton);
        sefer6buton.setText("6.Sefer");
        sefer6buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sefer6butonActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(Seferlist);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(sefereklebutonu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sefersilbutonu)
                .addGap(138, 138, 138))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sefer1buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sefer2buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sefer3buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sefer4buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sefer5buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sefer6buton)
                        .addGap(0, 96, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sefer1buton)
                    .addComponent(sefer2buton)
                    .addComponent(sefer3buton)
                    .addComponent(sefer4buton)
                    .addComponent(sefer5buton)
                    .addComponent(sefer6buton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sefereklebutonu)
                    .addComponent(sefersilbutonu))
                .addContainerGap())
        );

        jPanel3.setPreferredSize(new java.awt.Dimension(499, 35));

        buttonGroup2.add(otobusbutonu);
        otobusbutonu.setText("Otobüs");

        buttonGroup2.add(trenbutonu);
        trenbutonu.setText("Tren");

        buttonGroup2.add(ucakbutonu);
        ucakbutonu.setText("Uçak");

        Araclist.setToolTipText("");
        jScrollPane4.setViewportView(Araclist);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(otobusbutonu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trenbutonu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ucakbutonu)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otobusbutonu)
                    .addComponent(trenbutonu)
                    .addComponent(ucakbutonu))
                .addGap(47, 47, 47))
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gunlukkarmesaji, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(gunlukkarmesaji, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel3))))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String kar=Double.toString(company.profit);
    gunlukkarmesaji.setText(kar);
       
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       AnaEkran anaEkran=new AnaEkran();
       anaEkran.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sefersilbutonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sefersilbutonuActionPerformed
        int selectedindex = Araclist.getSelectedIndex();
  

    if (selectedindex == -1) {
        if (model2.getSize() == 0) {
            JOptionPane.showMessageDialog(this, "Liste Boş");
        } else {
            JOptionPane.showMessageDialog(this, "Sefer Seçmediniz.");
        }
    } else {
        Object selectedValue = Araclist.getSelectedValue();

        if (selectedValue == null) {
            JOptionPane.showMessageDialog(this, "Seçili bir değer yok.");
            return;
        }

       

        Transport transport = new Transport();
        
        if (otobusbutonu.isSelected()) {
            int i = 0;
            for (Vehicle arac : company.companyVehicle) {
                if (selectedValue.equals(arac.vehicleName)) {
                    company.profit-=company.calculateProfit(arac);
                    break;
                }
                i++;
            }
            
            model.removeElementAt(selectedindex);
            model2.removeElementAt(selectedindex);
            company.citytogo.remove(selectedindex);

            int j = 0;
            
            for (Vehicle arac : transport.uygunaraclar) {
                if (i < company.companyVehicle.size() && i < transport.uygunaraclar.size() &&
                        company.companyVehicle.get(i).namecompany.equals(arac.namecompany) && 
                        company.companyVehicle.get(i).vehicleName.equals(arac.vehicleName)) {
                    transport.uygunaraclar.remove(j);
                    company.companyVehicle.remove(i);
                    break;
                }
                j++;
            }

            int k = 0;
            for (Bus bus : company.companyBus) {
                if (selectedValue.equals(bus.vehicleName)) {
                    company.removeBus(bus);
                    break;
                }
                k++;
            }
         
            
        }else if(trenbutonu.isSelected()){
          int i = 0;
            for (Vehicle arac : company.companyVehicle) {
                if (selectedValue.equals(arac.vehicleName)) {
                    company.profit-=company.calculateProfit(arac);
                    break;
                }
                i++;
            }
            
            model.removeElementAt(selectedindex);
            model2.removeElementAt(selectedindex);
            company.citytogo.remove(selectedindex);

            int j = 0;
            for (Vehicle arac : transport.uygunaraclar) {
                if (i < company.companyVehicle.size() && i < transport.uygunaraclar.size() &&
                        company.companyVehicle.get(i).namecompany.equals(arac.namecompany) && 
                        company.companyVehicle.get(i).vehicleName.equals(arac.vehicleName)) {
                    transport.uygunaraclar.remove(j);
                    company.companyVehicle.remove(i);
                    break;
                }
                j++;
            }

            int k = 0;
            for (Train train : company.companyTrain) {
                if (selectedValue.equals(train.vehicleName)) {
                    company.removeTrain(train);
                    break;
                }
                k++;
            }
      
        }else if(ucakbutonu.isSelected()){
          int i = 0;
            for (Vehicle arac : company.companyVehicle) {
                if (selectedValue.equals(arac.vehicleName)) {
                    company.profit-=company.calculateProfit(arac);
                    break;
                }
                i++;
            }
            
            model.removeElementAt(selectedindex);
            model2.removeElementAt(selectedindex);
            company.citytogo.remove(selectedindex);

            int j = 0;
            for (Vehicle arac : transport.uygunaraclar) {
                if (i < company.companyVehicle.size() && i < transport.uygunaraclar.size() &&
                        company.companyVehicle.get(i).namecompany.equals(arac.namecompany) && 
                        company.companyVehicle.get(i).vehicleName.equals(arac.vehicleName)) {
                    transport.uygunaraclar.remove(j);
                    company.companyVehicle.remove(i);
                    break;
                }
                j++;
            }

            int k = 0;
            for (Plane plane : company.companyPlane) {
                if (selectedValue.equals(plane.vehicleName)) {
                    company.removePlane(plane);
                    break;
                }
                k++;
            }
        }else{
        
           JOptionPane.showMessageDialog(this, "Silinecek araç türünü seçmediniz.");
        
        }
        
        
        
        
        
        
        
        }
        
        
    }//GEN-LAST:event_sefersilbutonuActionPerformed

    private void sefer1butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sefer1butonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sefer1butonActionPerformed

    private void sefer6butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sefer6butonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sefer6butonActionPerformed

    private void sefereklebutonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sefereklebutonuActionPerformed
Transport transport = new Transport();
Highway highway=new Highway();
Airway airway=new Airway();        
Railway railway=new Railway(); 

        
        Bus eklenenBus=new Bus();
        eklenenBus.namecompany = company.companyname;
        Train eklenenTrain=new Train();
        eklenenTrain.namecompany = company.companyname;
        Plane eklenenPlane=new Plane();
        eklenenPlane.namecompany = company.companyname;
        Vehicle eklenenVehicle=new Vehicle() {
    @Override
    double calculateFuelCost() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
        };
        eklenenVehicle.namecompany=company.companyname;
        
        if(sefer1buton.isSelected()&& trenbutonu.isSelected()){
        
        JOptionPane.showMessageDialog(this, "1.Sefer Eklendi");
        model.addElement(railway.getCity1());
    
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Railway();
   Railway railway1=(Railway)chosenTrip;
   chosenTrip.city=railway1.getCity1();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı");
        
            
        
        eklenenTrain.vehicleName=vehiclename;
        eklenenTrain.seatCapacity=seatCapacity;
        eklenenTrain.seats = new int[seatCapacity];
        eklenenTrain.initializeSeatsRandomly();
        eklenenTrain.fuelCost=fuelCost;
        eklenenTrain.vehicleID=vehicleID;
        eklenenTrain.namecompany=namecompany;
        eklenenTrain.chosenTrip=railway1;
        eklenenTrain.customerPay = railway1.getCost1();
        eklenenTrain.distance = railway1.getDistance1();
        eklenenTrain.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenTrain.personelCost = transport.getVehicleList().get(0).personelCost;

        
            for (int i = 0; i < eklenenTrain.seats.length; i++) {
        int seatIndex = eklenenTrain.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenTrain.seats, i)){
        eklenenTrain.totalCustomerPay+=eklenenTrain.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenTrain);
           
        company.addTrain(eklenenTrain);
        model2.addElement(vehiclename);
      

        
        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=railway1;
        eklenenVehicle.customerPay = railway1.getCost1();
        eklenenVehicle.distance = railway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        
        company.addVehicle(eklenenVehicle);
       
        transport.addVehicleList(eklenenVehicle);
        
        
        }else if(sefer2buton.isSelected()&& trenbutonu.isSelected()){
        JOptionPane.showMessageDialog(this, "2.Sefer Eklendi");
        model.addElement(railway.getCity2());    
        
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Railway();
   Railway railway1=(Railway)chosenTrip;
   chosenTrip.city=railway1.getCity2();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı");
        
        eklenenTrain.vehicleName=vehiclename;
        eklenenTrain.seatCapacity=seatCapacity;
        eklenenTrain.seats = new int[seatCapacity];
        eklenenTrain.initializeSeatsRandomly();
        eklenenTrain.fuelCost=fuelCost;
        eklenenTrain.vehicleID=vehicleID;
        eklenenTrain.namecompany=namecompany;
        eklenenTrain.chosenTrip=railway1;
        eklenenTrain.customerPay = railway1.getCost2();
        eklenenTrain.distance = railway1.getDistance2();
        eklenenTrain.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenTrain.personelCost = transport.getVehicleList().get(0).personelCost;
        for (int i = 0; i < eklenenTrain.seats.length; i++) {
        int seatIndex = eklenenTrain.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenTrain.seats, i)){
        eklenenTrain.totalCustomerPay+=eklenenTrain.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenTrain);
       
        company.addTrain(eklenenTrain);
        model2.addElement(vehiclename);

        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=railway1;
        eklenenVehicle.customerPay = railway1.getCost1();
        eklenenVehicle.distance = railway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        company.addVehicle(eklenenVehicle);
        
        transport.addVehicleList(eklenenVehicle);
        
        
        }else if(sefer3buton.isSelected()&& otobusbutonu.isSelected()){
        JOptionPane.showMessageDialog(this, "3.Sefer Eklendi");
        model.addElement(highway.getCity1());    
        
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Highway();
   Highway highway1=(Highway)chosenTrip;
   chosenTrip.city=highway1.getCity1();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı");     
   
        eklenenBus.vehicleName=vehiclename;
        eklenenBus.seatCapacity=seatCapacity;
        eklenenBus.seats = new int[seatCapacity];
        eklenenBus.initializeSeatsRandomly();
        eklenenBus.fuelCost=fuelCost;
        eklenenBus.vehicleID=vehicleID;
        eklenenBus.namecompany=namecompany;
        eklenenBus.chosenTrip=highway1;
        eklenenBus.customerPay = highway1.getCost1();
        eklenenBus.distance = highway1.getDistance1();
        eklenenBus.totalfuelCost = eklenenBus.calculateFuelCost();
        eklenenBus.personelCost = transport.getVehicleList().get(0).personelCost;
        for (int i = 0; i < eklenenBus.seats.length; i++) {
        int seatIndex = eklenenBus.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenBus.seats, i)){
        eklenenBus.totalCustomerPay+=eklenenBus.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenBus);
        
        company.addBus(eklenenBus);
        model2.addElement(vehiclename);

        
        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=highway1;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.customerPay = highway1.getCost1();
        eklenenVehicle.distance = highway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        company.addVehicle(eklenenVehicle);
        
        
   
        
        transport.addVehicleList(eklenenVehicle);
        
        }else if(sefer4buton.isSelected()&& otobusbutonu.isSelected()){
        JOptionPane.showMessageDialog(this, "4.Sefer Eklendi");
        model.addElement(highway.getCity2());
        
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Highway();
   Highway highway1=(Highway)chosenTrip;
   chosenTrip.city=highway1.getCity2();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı");
   
        eklenenBus.vehicleName=vehiclename;
        eklenenBus.seatCapacity=seatCapacity;
        eklenenBus.seats = new int[seatCapacity];
        eklenenBus.initializeSeatsRandomly();
        eklenenBus.fuelCost=fuelCost;
        eklenenBus.vehicleID=vehicleID;
        eklenenBus.namecompany=namecompany;
        eklenenBus.chosenTrip=highway1;
        eklenenBus.customerPay = highway1.getCost2();
        eklenenBus.distance = highway1.getDistance2();
        eklenenBus.totalfuelCost = eklenenBus.calculateFuelCost();
        eklenenBus.personelCost = transport.getVehicleList().get(0).personelCost;
        for (int i = 0; i < eklenenBus.seats.length; i++) {
        int seatIndex = eklenenBus.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenBus.seats, i)){
        eklenenBus.totalCustomerPay+=eklenenBus.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenBus);
  
        
        company.addBus(eklenenBus);
        model2.addElement(vehiclename);

        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=highway1;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.customerPay = highway1.getCost1();
        eklenenVehicle.distance = highway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        company.addVehicle(eklenenVehicle);
        
        
        
       
        
        transport.addVehicleList(eklenenVehicle);
        
        }else if(sefer5buton.isSelected()&& ucakbutonu.isSelected()){
        JOptionPane.showMessageDialog(this, "5.Sefer Eklendi");
        model.addElement(airway.getCity1());
        
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Airway();
   Airway airway1=(Airway)chosenTrip;
   chosenTrip.city=airway1.getCity1();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı"); 
   
        eklenenPlane.vehicleName=vehiclename;
        eklenenPlane.seatCapacity=seatCapacity;
        eklenenPlane.seats = new int[seatCapacity];
        eklenenPlane.initializeSeatsRandomly();
        eklenenPlane.fuelCost=fuelCost;
        eklenenPlane.vehicleID=vehicleID;
        eklenenPlane.namecompany=namecompany;
        eklenenPlane.chosenTrip=airway1;
        eklenenPlane.customerPay = airway1.getCost1();
        eklenenPlane.distance = airway1.getDistance1();
        eklenenPlane.totalfuelCost = eklenenPlane.calculateFuelCost();
        eklenenPlane.personelCost = transport.getVehicleList().get(0).personelCost;
        for (int i = 0; i < eklenenPlane.seats.length; i++) {
        int seatIndex = eklenenPlane.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenPlane.seats, i)){
        eklenenPlane.totalCustomerPay+=eklenenPlane.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenPlane);
       
        company.addPlane(eklenenPlane);
        model2.addElement(vehiclename);

        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=airway1;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.customerPay = airway1.getCost1();
        eklenenVehicle.distance = airway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        company.addVehicle(eklenenVehicle);

       
        
        transport.addVehicleList(eklenenVehicle);
        
        }else if(sefer6buton.isSelected()&& ucakbutonu.isSelected()){
        JOptionPane.showMessageDialog(this, "6.Sefer Eklendi");
        model.addElement(airway.getCity2());
        
   String vehiclename=JOptionPane.showInputDialog("Arac Adı:");
   int seatCapacity=Integer.parseInt(JOptionPane.showInputDialog("Koltuk sayısı:"));
   Trip chosenTrip=new Airway();
   Airway airway1=(Airway)chosenTrip;
   chosenTrip.city=airway1.getCity2();
   int fuelCost=Integer.parseInt(JOptionPane.showInputDialog("Yakıt ücreti:"));
   int vehicleID=Integer.parseInt(JOptionPane.showInputDialog("Vehicle ID"));
   String namecompany=JOptionPane.showInputDialog("Şirket Adı"); 
   
        eklenenPlane.vehicleName=vehiclename;
        eklenenPlane.seatCapacity=seatCapacity;
        eklenenPlane.seats = new int[seatCapacity];
        eklenenPlane.initializeSeatsRandomly();
        eklenenPlane.fuelCost=fuelCost;
        eklenenPlane.vehicleID=vehicleID;
        eklenenPlane.namecompany=namecompany;
        eklenenPlane.chosenTrip=airway1;
        eklenenPlane.customerPay = airway1.getCost2();
        eklenenPlane.distance = airway1.getDistance2();
        eklenenPlane.totalfuelCost = eklenenPlane.calculateFuelCost();
        eklenenPlane.personelCost = transport.getVehicleList().get(0).personelCost;
        for (int i = 0; i < eklenenPlane.seats.length; i++) {
        int seatIndex = eklenenPlane.seats[i];
        //System.out.println(seatIndex);
        if(transport.isSeatEmpty(eklenenPlane.seats, i)){
        eklenenPlane.totalCustomerPay+=eklenenPlane.customerPay;
        }
    }
        company.profit += company.calculateProfit(eklenenPlane);
     
        company.addPlane(eklenenPlane);
        model2.addElement(vehiclename);

        
        eklenenVehicle.vehicleName=vehiclename;
        eklenenVehicle.seatCapacity=seatCapacity;
        eklenenVehicle.fuelCost=fuelCost;
        eklenenVehicle.vehicleID=vehicleID;
        eklenenVehicle.namecompany=namecompany;
        eklenenVehicle.chosenTrip=airway1;
        eklenenVehicle.seats = new int[seatCapacity];
        eklenenVehicle.initializeSeatsRandomly();
        eklenenVehicle.customerPay = airway1.getCost1();
        eklenenVehicle.distance = airway1.getDistance1();
        eklenenVehicle.totalfuelCost = eklenenTrain.calculateFuelCost();
        eklenenVehicle.personelCost = transport.getVehicleList().get(0).personelCost;
        company.addVehicle(eklenenVehicle);
        
        
 
        
        transport.addVehicleList(eklenenVehicle);
        }else{
        
            JOptionPane.showMessageDialog(this, "Sefer veya Araç seçmediniz.");
         
        }


    }//GEN-LAST:event_sefereklebutonuActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SirketPaneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SirketPaneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SirketPaneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SirketPaneli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SirketPaneli().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Araclist;
    private javax.swing.JList<String> Seferlist;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel gunlukkarmesaji;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton otobusbutonu;
    private javax.swing.JRadioButton sefer1buton;
    private javax.swing.JRadioButton sefer2buton;
    private javax.swing.JRadioButton sefer3buton;
    private javax.swing.JRadioButton sefer4buton;
    private javax.swing.JRadioButton sefer5buton;
    private javax.swing.JRadioButton sefer6buton;
    private javax.swing.JButton sefereklebutonu;
    private javax.swing.JButton sefersilbutonu;
    private javax.swing.JRadioButton trenbutonu;
    private javax.swing.JRadioButton ucakbutonu;
    // End of variables declaration//GEN-END:variables
}
